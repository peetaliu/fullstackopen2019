{"version":3,"sources":["services/PersonsService.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notifications.js","App.js","index.js"],"names":["baseURL","axios","get","personObj","post","id","put","delete","Filter","props","value","search","onChange","handler","PersonForm","allPersons","persons","onSubmit","e","preventDefault","newName","trim","newNumber","name","number","some","p","console","log","findIndex","window","confirm","serv","then","updateList","alert","msgObject","type","msg","res","setPersons","concat","data","setNewName","setNewNumber","message","setTimeout","handleNameChange","handleNumChange","Person","person","onClick","catch","Persons","personsToShow","showAll","filter","toLowerCase","includes","map","key","Notifications","style","color","background","borderStyle","borderRadius","borderColor","padding","marginBottom","App","useState","setSearch","setShowAll","setMsg","useEffect","PersonsService","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeab2406.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => axios.get(baseURL);\r\n\r\nconst create = (personObj) => axios.post(baseURL, personObj);\r\n\r\nconst update = (id, personObj) => axios.put(`${baseURL}/${id}`, personObj);\r\n\r\nconst del = (id) => axios.delete(`${baseURL}/${id}`);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  del,\r\n};\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => <div>filter shown with: <input value={props.search} onChange={props.handler}/></div>\r\n\r\nexport default Filter","import React from \"react\";\r\nimport serv from \"../services/PersonsService\";\r\n\r\nconst PersonForm = (props) => {\r\n  const allPersons = [...props.persons];\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n    if (!props.newName.trim() || !props.newNumber.trim()) {\r\n      window.alert(\"Text boxes cannot be empty\");\r\n    } else {\r\n      const personObj = {\r\n        name: props.newName,\r\n        number: props.newNumber,\r\n      };\r\n      if (allPersons.some((p) => p.name === props.newName)) {\r\n        console.log(allPersons.findIndex((p) => p.name === props.newName));\r\n        if (\r\n          window.confirm(\r\n            `${props.newName} already exists in the phonebook. Replace old number with new?`\r\n          )\r\n        ) {\r\n          const id =\r\n            allPersons[allPersons.findIndex((p) => p.name === props.newName)]\r\n              .id;\r\n          serv.update(id, personObj).then(props.updateList());\r\n        }\r\n      } else if (allPersons.some((p) => p.number === props.newNumber)) {\r\n        window.alert(\r\n          `${props.newNumber} already exists in the phonebook. Please add a different number`\r\n        );\r\n      } else {\r\n        const msgObject = {\r\n          type: \"success\",\r\n          msg: `Added ${props.newName}`,\r\n        };\r\n        serv.create(personObj).then((res) => {\r\n          props.setPersons(props.persons.concat(res.data));\r\n          props.setNewName(\"\");\r\n          props.setNewNumber(\"\");\r\n          props.message(msgObject);\r\n          setTimeout(() => {\r\n            props.message(null);\r\n          }, 5000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input value={props.newNumber} onChange={props.handleNumChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nimport serv from \"../services/PersonsService\";\r\n\r\nconst Person = props => {\r\n  const handleDelete = () => {\r\n    const msg = {\r\n      type: \"error\",\r\n      msg: `${props.person.name} was already been removed from database`\r\n    };\r\n\r\n    if (window.confirm(`Delete ${props.person.name}?`)) {\r\n      serv\r\n        .del(props.person.id)\r\n        .then(serv.getAll())\r\n        .then(props.updateList())\r\n        .catch(e => {\r\n          props.message(msg);\r\n          setTimeout(() => {\r\n            props.message(null);\r\n          }, 5000);\r\n          props.updateList();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {props.person.name} {props.person.number}{\" \"}\r\n      <button onClick={handleDelete}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\nconst Persons = props => {\r\n  const personsToShow = props.showAll\r\n    ? props.persons\r\n    : props.persons.filter(\r\n        p =>\r\n          p.name\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(props.search.toLowerCase()) ||\r\n          p.number\r\n            .toLowerCase()\r\n            .trim()\r\n            .includes(props.search.toLowerCase())\r\n      );\r\n  const showNames = () =>\r\n    personsToShow.map(p => (\r\n      <Person\r\n        key={p.name}\r\n        person={p}\r\n        updateList={props.updateList}\r\n        message={props.message}\r\n      />\r\n    ));\r\n\r\n  return <div>{showNames()}</div>;\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notifications = ({ message }) => {\r\n  const error = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    borderColor: \"red\",\r\n    padding: 10,\r\n    marginBottom: 10\r\n  };\r\n\r\n  const success = {\r\n    color: \"green\",\r\n    background: \"lightgrey\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"green\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  };\r\n  if (message === null) {\r\n    return null;\r\n  } else if (message.type === \"error\") {\r\n    return <div style={error}>{message.msg}</div>;\r\n  } else if (message.type === \"success\") {\r\n    return <div style={success}>{message.msg}</div>;\r\n  }\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PersonsService from \"./services/PersonsService\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notifications from \"./components/Notifications\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    PersonsService.getAll().then((res) => {\r\n      setPersons(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const updateList = () => {\r\n    PersonsService.getAll().then((res) => {\r\n      setPersons(res.data);\r\n    });\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.target.value.trim()) {\r\n      setShowAll(false);\r\n    } else {\r\n      setShowAll(true);\r\n    }\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notifications message={msg} />\r\n\r\n      <Filter search={search} handler={handleSearch} />\r\n\r\n      <h3>Add a new</h3>\r\n\r\n      <PersonForm\r\n        persons={persons}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        setPersons={setPersons}\r\n        setNewName={setNewName}\r\n        setNewNumber={setNewNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumChange={handleNumChange}\r\n        updateList={updateList}\r\n        message={setMsg}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons\r\n        persons={persons}\r\n        search={search}\r\n        showAll={showAll}\r\n        updateList={updateList}\r\n        message={setMsg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}