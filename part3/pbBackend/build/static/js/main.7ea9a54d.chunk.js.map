{"version":3,"sources":["services/PersonsService.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notifications.js","App.js","index.js"],"names":["baseURL","axios","get","personObj","post","id","put","delete","Filter","props","value","search","onChange","handler","PersonForm","allPersons","persons","timeoutMsg","msgObj","message","setTimeout","onSubmit","e","preventDefault","newName","trim","newNumber","name","number","some","p","window","confirm","findIndex","serv","then","updateList","catch","error","msgObject","type","msg","response","data","alert","res","setPersons","concat","setNewName","setNewNumber","err","handleNameChange","handleNumChange","Person","person","onClick","Persons","personsToShow","showAll","filter","toLowerCase","includes","map","key","Notifications","style","color","background","borderStyle","borderRadius","borderColor","padding","marginBottom","App","useState","setSearch","setShowAll","setMsg","useEffect","PersonsService","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ea9a54d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => axios.get(baseURL);\r\n\r\nconst create = (personObj) => axios.post(baseURL, personObj);\r\n\r\nconst update = (id, personObj) => axios.put(`${baseURL}/${id}`, personObj);\r\n\r\nconst del = (id) => axios.delete(`${baseURL}/${id}`);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  del,\r\n};\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => <div>filter shown with: <input value={props.search} onChange={props.handler}/></div>\r\n\r\nexport default Filter","import React from \"react\";\r\nimport serv from \"../services/PersonsService\";\r\n\r\nconst PersonForm = (props) => {\r\n  const allPersons = [...props.persons];\r\n  const timeoutMsg = (msgObj) => {\r\n    props.message(msgObj);\r\n    setTimeout(() => {\r\n      props.message(null);\r\n    }, 5000);\r\n  };\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n    if (!props.newName.trim() || !props.newNumber.trim()) {\r\n      window.alert(\"Text boxes cannot be empty\");\r\n    } else {\r\n      const personObj = {\r\n        name: props.newName,\r\n        number: props.newNumber,\r\n      };\r\n      if (allPersons.some((p) => p.name === props.newName)) {\r\n        if (\r\n          window.confirm(\r\n            `${props.newName} already exists in the phonebook. Replace old number with new?`\r\n          )\r\n        ) {\r\n          const id =\r\n            allPersons[allPersons.findIndex((p) => p.name === props.newName)]\r\n              .id;\r\n          serv\r\n            .update(id, personObj)\r\n            .then(() => props.updateList())\r\n            .catch((error) => {\r\n              const msgObject = {\r\n                type: \"error\",\r\n                msg: error.response.data,\r\n              };\r\n              timeoutMsg(msgObject);\r\n            });\r\n        }\r\n      } else if (allPersons.some((p) => p.number === props.newNumber)) {\r\n        window.alert(\r\n          `${props.newNumber} already exists in the phonebook. Please add a different number`\r\n        );\r\n      } else {\r\n        serv\r\n          .create(personObj)\r\n          .then((res) => {\r\n            const msgObject = {\r\n              type: \"success\",\r\n              msg: `Added ${props.newName}`,\r\n            };\r\n            props.setPersons(props.persons.concat(res.data));\r\n            props.setNewName(\"\");\r\n            props.setNewNumber(\"\");\r\n            timeoutMsg(msgObject);\r\n          })\r\n          .catch((err) => {\r\n            const msgObject = {\r\n              type: \"error\",\r\n              msg: err.response.data.error,\r\n            };\r\n            timeoutMsg(msgObject);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input value={props.newNumber} onChange={props.handleNumChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default PersonForm;\r\n","import React from \"react\";\r\nimport serv from \"../services/PersonsService\";\r\n\r\nconst Person = (props) => {\r\n  const handleDelete = () => {\r\n    const msg = {\r\n      type: \"error\",\r\n      msg: `${props.person.name} was already been removed from database`,\r\n    };\r\n\r\n    if (window.confirm(`Delete ${props.person.name}?`)) {\r\n      serv\r\n        .del(props.person.id)\r\n        .then(serv.getAll())\r\n        .then(props.updateList())\r\n        .catch((e) => {\r\n          props.message(msg);\r\n          setTimeout(() => {\r\n            props.message(null);\r\n          }, 5000);\r\n          props.updateList();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {props.person.name} {props.person.number}{\" \"}\r\n      <button onClick={handleDelete}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\nconst Persons = (props) => {\r\n  const personsToShow = props.showAll\r\n    ? props.persons\r\n    : props.persons.filter(\r\n        (p) =>\r\n          p.name.toLowerCase().trim().includes(props.search.toLowerCase()) ||\r\n          p.number.toLowerCase().trim().includes(props.search.toLowerCase())\r\n      );\r\n  const showNames = () =>\r\n    personsToShow.map((p) => (\r\n      <Person\r\n        key={p.name}\r\n        person={p}\r\n        updateList={props.updateList}\r\n        message={props.message}\r\n      />\r\n    ));\r\n\r\n  return <div>{showNames()}</div>;\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notifications = ({ message }) => {\r\n  const error = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    borderColor: \"red\",\r\n    padding: 10,\r\n    marginBottom: 10\r\n  };\r\n\r\n  const success = {\r\n    color: \"green\",\r\n    background: \"lightgrey\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"green\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  };\r\n  if (message === null) {\r\n    return null;\r\n  } else if (message.type === \"error\") {\r\n    return <div style={error}>{message.msg}</div>;\r\n  } else if (message.type === \"success\") {\r\n    return <div style={success}>{message.msg}</div>;\r\n  }\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PersonsService from \"./services/PersonsService\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notifications from \"./components/Notifications\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    PersonsService.getAll().then((res) => {\r\n      setPersons(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const updateList = () => {\r\n    PersonsService.getAll().then((res) => {\r\n      setPersons(res.data);\r\n    });\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.target.value.trim()) {\r\n      setShowAll(false);\r\n    } else {\r\n      setShowAll(true);\r\n    }\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notifications message={msg} />\r\n\r\n      <Filter search={search} handler={handleSearch} />\r\n\r\n      <h3>Add a new</h3>\r\n\r\n      <PersonForm\r\n        persons={persons}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        setPersons={setPersons}\r\n        setNewName={setNewName}\r\n        setNewNumber={setNewNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumChange={handleNumChange}\r\n        updateList={updateList}\r\n        message={setMsg}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons\r\n        persons={persons}\r\n        search={search}\r\n        showAll={showAll}\r\n        updateList={updateList}\r\n        message={setMsg}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}